name: Node CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v**'
  pull_request:

jobs:
  lint:
    name: Typecheck, Lint & Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: apt-get update
        run: sudo apt-get update
      - name: Install libasound2-dev
        run: sudo apt-get install -y libasound2-dev
      - name: Install libudev-dev
        run: sudo apt-get install -y libudev-dev
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          corepack enable

          # try and avoid timeout errors
          yarn config set httpTimeout 100000

          yarn --immutable
      - name: Typecheck
        run: yarn build
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test
      - name: Run license check
        run: |
          yarn license-validate
  macos-build:
    name: Install and build on macOS
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          corepack enable

          # try and avoid timeout errors
          yarn config set httpTimeout 100000

          yarn --immutable
      - name: Build
        run: |
          yarn build
  windows-build:
    name: Install and build on Windows
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          corepack enable

          # try and avoid timeout errors
          yarn config set httpTimeout 100000

          yarn --immutable
      - name: Build
        run: |
          yarn build
