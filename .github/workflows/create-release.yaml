name: Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - id: create_release
        name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: true
  build-windows-binaries:
    name: Build Windows Binaries
    runs-on: windows-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          yarn --ignore-engines --frozen-lockfile --network-timeout 1000000
      - name: Build
        run: |
          yarn build
      - name: Build TSR-Bridge binary
        run: |
          cd apps/tsr-bridge
          yarn build:binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
      - name: Remove TSR-Bridge latest.yml
        uses: flcdrg/remove-release-asset-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-release.outputs.release_id }}
          asset_name: latest.yml
      - name: Build SuperConductor binary
        run: |
          cd apps/app
          yarn build:binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
  build-linux-binaries:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: apt-get update
        run: sudo apt-get update
      - name: Install libasound2-dev
        run: sudo apt-get install -y libasound2-dev
      - name: Install libudev-dev
        run: sudo apt-get install -y libudev-dev
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          yarn --frozen-lockfile --network-timeout 1000000
      - name: Build
        run: |
          yarn build
      - name: Build TSR-Bridge binary
        run: |
          cd apps/tsr-bridge
          yarn build:binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Remove TSR-Bridge latest-linux.yml
        uses: flcdrg/remove-release-asset-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-release.outputs.release_id }}
          asset_name: latest-linux.yml
      - name: Build SuperConductor binary
        run: |
          cd apps/app
          yarn build:binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-macos-binary-TSR-bridge:
    name: Build MacOS Binary - TSR-Bridge
    runs-on: macos-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          yarn --ignore-engines --frozen-lockfile --network-timeout 1000000
      - name: Build
        run: |
          yarn build
      - name: Build TSR-Bridge binary
        run: |
          cd apps/tsr-bridge
          yarn build:binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.MAC_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_KEY_PASSWORD }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
      - name: Remove TSR-Bridge latest-mac.yml
        uses: flcdrg/remove-release-asset-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-release.outputs.release_id }}
          asset_name: latest-mac.yml
  build-macos-binary-superconductor:
    name: Build MacOS Binary - SuperConductor
    runs-on: macos-latest
    needs: [create-release, build-macos-binary-TSR-bridge]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          yarn --ignore-engines --frozen-lockfile --network-timeout 1000000
      - name: Build
        run: |
          yarn build
      - name: Build SuperConductor binary
        run: |
          cd apps/app
          yarn build:binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.MAC_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_KEY_PASSWORD }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          USE_HARD_LINKS: false
