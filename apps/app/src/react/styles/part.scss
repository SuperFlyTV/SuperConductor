@use 'sass:color';
@import './objectTypeStyling.scss';

$part_time_height: 16px;

.part {
	position: relative;
	margin-top: 2px;
	// overflow: hidden; // Create an alternative
	display: grid;
	grid-template-columns: $partTabWidth 19.2rem minmax(auto, 100px) 1fr 0.9rem;
	grid-template-rows: 1.6rem 1fr;
	gap: 0px 0px;
	grid-template-areas:
		'tab meta dropdown time     endcap'
		'tab meta names    timeline endcap';

	&.part-expression {
		grid-template-columns: $partTabWidth 19.2rem minmax(auto, 100px) 1fr 0.9rem;
		grid-template-rows: 1.6rem 1fr;
		gap: 0px 0px;
		grid-template-areas:
			'tab meta dropdown time     endcap'
			'tab meta names    timeline endcap';
	}

	background-color: $partMetaColor;

	&:first-child {
		&,
		.part__tab,
		> .part__selected {
			border-top-left-radius: calc($partTabWidth / 2);
		}

		&,
		.part__endcap,
		> .part__selected {
			border-top-right-radius: calc($partTabWidth / 2);
		}
	}

	&:last-child {
		&,
		.part__tab,
		> .part__selected {
			border-bottom-left-radius: calc($partTabWidth / 2);
		}

		&,
		.part__endcap,
		> .part__selected {
			border-bottom-right-radius: calc($partTabWidth / 2);
		}
	}

	&:hover {
		.toggle-btn:not(.selected),
		.MuiToggleButton-sizeSmall:not(.Mui-selected) {
			opacity: 0.4;
		}
	}

	&.selectable {
		cursor: pointer;

		&:hover {
			background-color: color.adjust($partMetaColor, $lightness: -3%);
		}
	}

	> .part__selected {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		pointer-events: none;
		z-index: 2;
		transition: $default-transition;
	}

	&.selected {
		> .part__selected {
			box-shadow: inset 0px 0px 0px 2px #ffffff65;
		}
	}

	&.dragging {
		border: 1px solid white;
		border-top: 0;
		display: block;
		overflow: visible;
		margin-top: 0;
		margin-bottom: -1px;

		> * {
			display: none;
		}

		> .part__dragArrow {
			display: block;
		}
	}

	&.disabled {
		color: #999;

		.part__meta {
			background-color: color.adjust($partMetaColor, $alpha: -0.5);
		}

		.part__tab {
			opacity: 0.5;
		}

		.triggers {
			opacity: 0.5;
		}

		.part__meta .title {
			opacity: 0.5;
		}

		.part__dropdown {
			background-color: color.adjust($partMetaColor, $alpha: -0.5);
		}
	}

	&.locked {
		.part__drag-handle {
			pointer-events: none;
		}
	}

	&__tab {
		display: flex;
		align-items: center;
		flex-direction: column;
		justify-content: space-between;
		background-color: $partDragHandleColor;
		width: $partTabWidth;
		box-sizing: border-box;
		padding: 0.6rem 0;
		grid-area: tab;

		@include useObjectTypeStyles();
	}

	&__drag-handle {
		cursor: grab;
		flex-grow: 1;
	}

	&__submenu-button {
		cursor: pointer;
	}

	&__submenu {
		padding: 1.5rem;

		& .controls {
			display: flex;
			justify-content: end;
			align-self: flex-end;

			& > *:not(:last-child) {
				margin-right: 0.6rem;
			}
		}
	}

	&__triggers-submenu {
		padding: 1.5rem;

		& .triggers {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			margin-left: -0.4rem;
			margin-bottom: 1rem;
		}

		& .controls {
			display: flex;
			justify-content: end;
			align-self: flex-end;

			& > *:not(:last-child) {
				margin-right: 0.6rem;
			}
		}
	}

	&__meta {
		// background-color: $partMetaColor;
		padding: 0.5rem 0.4rem;
		box-sizing: border-box;
		grid-area: meta;
		display: grid;
		grid-template: auto / 1fr auto;

		&__left {
			display: grid;
			grid-template: 1fr auto / auto;
			flex-grow: 1;
			flex-shrink: 1;
			min-width: 0;
		}

		&__right {
			flex-shrink: 0;
		}

		& .title,
		& .edit-title {
			margin-right: 1rem;
		}

		& .title {
			margin-bottom: 1rem;
			font-weight: 400;
			overflow-wrap: break-word;
			min-width: 1px;
			min-height: 1em;
			font-size: 1.4rem;

			&.editable {
				cursor: text;
			}
		}

		& .controls {
			display: flex;
			margin-top: 0.3rem;
			height: 2.2rem; // This is needed so that the controls don't collapse on initial render

			& > *:not(:last-child) {
				margin-right: 0.6rem;
			}
		}

		& .part__play,
		& .part__stop,
		& .part__pause {
			align-self: flex-start;
			flex-shrink: 0;
			margin-left: 0.6rem;
		}

		.button-placeholder {
			// Used as a placeholder instead of a button, in initial-render
			height: 22px;
			width: 22px;
		}
	}

	&__dropdown {
		// background-color: $partMetaColor;
		grid-area: dropdown;
	}

	&__layer-names {
		background: $emptyLayerColor;
		display: flex;
		flex-direction: column;
		font-family: $mainFontCondensed;
		max-width: 100px;
		border-right: 1px;
		border-color: black;
		border-right-style: solid;
		grid-area: names;

		&__name {
			display: flex;
			justify-content: end;
			align-items: center;
			height: $layerHeight;
			padding: 0 0.3rem;
			font-size: 1.4rem;
			color: #9c9c9c;
			white-space: nowrap;
			min-width: 0;
			flex-shrink: 1;
			box-sizing: content-box;

			> span {
				min-width: 0;
				text-overflow: ellipsis;
				overflow: hidden;
			}

			&:nth-child(odd) {
				background: #222630;
			}

			&:not(:last-child) {
				border-bottom: 1px;
				border-color: #2d3340;
				border-bottom-style: solid;
			}
		}
	}

	&__time {
		position: relative;
		grid-area: time;
		display: flex;
		font-size: 14px;
		font-family: $mainFontSemiCondensed;
		font-weight: 400;
		font-variant-numeric: tabular-nums;
		// overflow: hidden;
		height: $part_time_height;

		&__current-time {
			margin-left: 3px;
			position: relative;
			top: 0px;
			font-family: 'Barlow Condensed';
			font-weight: 300;
			line-height: 1;

			&__label {
				@media screen and (max-width: 1023px) {
					display: none;
				}
			}

			&__value {
				font-family: 'Barlow Semi Condensed';
				font-weight: 400;
			}
		}

		&__remaining-time {
			margin-left: auto;
			margin-right: 100px;
			position: relative;
			top: 0px;
			font-family: 'Barlow Condensed';
			font-weight: 300;
			line-height: 1;

			&__label {
				@media screen and (max-width: 1023px) {
					display: none;
				}
			}

			&__value {
				font-family: 'Barlow Semi Condensed';
				font-weight: 400;
			}
		}

		&__duration {
			position: absolute;
			top: 0px;
			bottom: 0px;
			right: 0px;

			padding-right: 4px;

			line-height: 1;
			font-family: $mainFontCondensed;
			font-weight: 300;
			text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000,
				0px 0px 3px rgba(0, 0, 0, 0.75);
			z-index: 1;

			background: linear-gradient(90deg, transparent, black);

			&__value {
				font-weight: 700;
			}
		}
	}

	&__timeline {
		position: relative;
		background-color: #222630;
		grid-area: timeline;

		& > .layers-wrapper {
			position: relative;
			height: 100%;
			overflow: hidden;
		}

		& > .countdown-overlay {
			position: absolute;
			top: 0.3rem;
			left: 0.3rem;
			bottom: 0.3rem;
			right: 0.3rem;
			pointer-events: none;
		}

		&__duration {
			position: absolute;
			transform: translateY(-100%);
			right: 0;
			font-size: 1.3rem;
			margin-top: -1.2rem;

			z-index: 10;
		}
	}
    &__expression__timeline {
        position: relative;
        background-color: #222630;
        grid-area: timeline;
    }
	&__endcap {
		grid-area: endcap;
		background: black;

		&.group-playing {
			background: #000000;
		}

		&.part-play-next {
			background: linear-gradient(180deg, black $part_time_height, #0f630f $part_time_height);
		}

		&.part-playing {
			background: #aa0000;
		}

		&.part-paused {
			// background: #aaaa00;
			animation: anim-part-paused 2s infinite;
		}

		@keyframes anim-part-paused {
			0% {
				background-color: #aa0000;
			}

			33% {
				background-color: #aa0000;
			}

			66% {
				background-color: black;
			}

			100% {
				background-color: #aa0000;
			}
		}
	}

	&__dragArrow {
		display: none;
		position: absolute;
		top: 50%;
		left: 0;
		transform: translate(-100%, -50%);
		width: 0;
		height: 0;
		border-top: $partDragIndicatorSize solid transparent;
		border-bottom: $partDragIndicatorSize solid transparent;
		border-left: $partDragIndicatorSize solid white;
	}

	&:not(:hover) {
		.control--hoverOnly {
			display: none;
		}
	}

	.part__error-overlay {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(0, 0, 0, 0.5);
		z-index: 1;
	}

	.end-cap-hover {
		position: absolute;
		top: 0;
		right: -15px;
		z-index: 3;
		opacity: 0;
		// display: none;
		transition: opacity 0.2s ease-in-out;

		display: flex;
		flex-direction: column;
		gap: 0.5em;

		&:hover {
			opacity: 1 !important;
		}
	}

	&:hover .end-cap-hover {
		// display: block;
		opacity: 0.3;
	}
}

.trigger {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	align-items: center;

	&:not(:last-child) {
		margin-bottom: 0.1rem;
	}

	.label {
		font-size: 80%;
	}
	.trigger-pill {
	}

	.field {
		display: inline-flex; // Improves vertical centering.

		&:not(:first-child) {
			margin-left: 0.6rem;
		}
	}
}

.trigger__buttons {
	display: flex;
	align-items: center;
	justify-content: end;
	margin: 0.25em 0;
	padding: 1rem;

	&__triggerType {
		margin-left: 0.6rem;
	}
}
