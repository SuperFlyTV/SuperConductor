@use 'sass:color';
@import './objectTypeStyling.scss';

$partPadding: 2px;

$partWidth: 8em;
$partMargin: 0.2em;
$partMinHeight: 5em;

$partHeaderHeight: 1.75em;

.part-button {
	position: relative;
	margin: $partMargin;

	border-radius: calc($partTabWidth / 2);

	background: $emptyLayerColor;
	border-bottom: 1px solid $partOutlineColor;
	border-left: 1px solid $partOutlineColor;
	border-right: 1px solid $partOutlineColor;

	&.selectable {
		cursor: pointer;

		&:hover {
			// background-color: color.adjust($partMetaColor, $lightness: -3%);
			.part-button__cover {
				background-color: rgba(0, 0, 0, 0.3);
			}
		}
	}

	&.extended {
		// height: 5em;

		.part-button__content {
			width: calc($partWidth * 2 + $partMargin * 2 + 3px);
		}
	}

	&__header {
		position: absolute;
		top: 0;
		left: 0;
		min-width: 100%;
		height: $partHeaderHeight;

		padding: $partPadding $partPadding 0 $partPadding;
		background: $partDragHandleColor;
		border-top-right-radius: calc($partTabWidth / 2);
		border-top-left-radius: calc($partTabWidth / 2);

		@include useObjectTypeStyles();

		&__controls {
			// display: inline-block;
			display: flex;
			margin-top: 0.3rem;
			height: 2.2rem;
		}
		&__label {
			position: absolute;
			top: $partPadding;
			left: $partPadding;
			right: $partPadding;
			bottom: 0;

			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		}
	}
	&__content {
		position: relative;

		padding: $partPadding;

		border-bottom-right-radius: calc($partTabWidth / 2);
		border-bottom-left-radius: calc($partTabWidth / 2);

		overflow: hidden;

		margin-top: $partHeaderHeight;

		min-height: $partMinHeight;
		width: $partWidth;

		transition: width 0.25s ease-in-out, height 0.25s ease-in-out;

		> .part__timeline > .layers-wrapper {
			min-height: $partMinHeight;
		}
	}

	&__cover {
		position: absolute;
		top: $partHeaderHeight;
		left: $partPadding;
		right: $partPadding;
		bottom: $partPadding;
		z-index: $timeline-cover-zIndex;
		border-bottom-right-radius: calc($partTabWidth / 2);
		border-bottom-left-radius: calc($partTabWidth / 2);

		overflow: hidden;

		background-color: rgba(0, 0, 0, 0.5);

		&__label {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			z-index: 1;

			/** Center the text vertically and horizontally */
			display: flex;
			justify-content: space-around;
			align-items: center;

			> span {
				text-align: center;
				font-weight: bold;
				line-height: 1;
			}
		}
		&__control-buttons {
			position: absolute;
			top: 0;
			right: 0;
			left: 0;
			bottom: 0;
			z-index: 2;

			/** Center the buttons vertically and horizontally */
			display: flex;
			flex-direction: row;
			justify-content: space-around;
			align-items: flex-end;

			> .btn {
				height: 3em;
				width: 3em;
				flex-grow: 1;
			}
		}
	}

	&.locked {
		.part-button__drag-handle {
			pointer-events: none;
			visibility: hidden;
		}
	}

	&__drag-handle {
		cursor: grab;
		display: inline-block;
	}

	> .part__selected {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		pointer-events: none;
		z-index: 2;
		transition: $default-transition;

		border-radius: calc($partTabWidth / 2);
	}

	&.selected {
		> .part__selected {
			box-shadow: inset 0px 0px 0px 2px #ffffff65;
		}
	}

	// Display the control-button on hover, when selected or locked
	.part-button__cover__control-buttons {
		display: none;
	}
	.part-button__cover__label {
		display: flex;
	}
	&.selected,
	&:hover,
	&.locked {
		.part-button__cover__control-buttons {
			display: flex;
		}
		.part-button__cover__label {
			display: none;
		}
	}
}
