@import './objectTypeStyling.scss';

.layer {
	width: 100%;
	height: $layerHeight;
	background: $emptyLayerColor;
	position: relative;
	display: flex;

	&:not(:last-child) {
		margin-bottom: 1px;
	}

	&:nth-child(odd) {
		.layer__content {
			background: #222630;
		}
	}

	&__content {
		position: relative;
		flex: 1;

		> .insert-marker {
			position: absolute;
			top: 0;
			height: 100%;
			left: 0;
			width: 0.4em;
			background: $markerColor;
		}

		.timeline-object {
			height: $layerHeight;
			display: flex;
			align-items: center;
			background: #666;
			position: absolute;
			padding: 0 0.5rem;
			box-sizing: border-box;

			transition: $default-transition;
			border-radius: $borderRadius;
			justify-content: space-between;
			// overflow: hidden;
			min-width: calc($timelineObjHandleWidth * 2);

			&.selectable {
				cursor: pointer;
				&:hover {
					filter: brightness(80%);
				}
			}
			&.selected {
				box-shadow: inset 0px 0px 0px 3px #ffffff85;
				z-index: 1;
			}

			&.moved {
				transition: none;
			}

			&.isAtMinWidth {
				.handle {
					pointer-events: none;
				}
			}

			&.locked {
				.handle {
					pointer-events: none;
				}
			}

			.transition {
				z-index: 1;
				position: absolute;
				top: 0;
				height: 100%;
				width: 1em;

				pointer-events: none;

				&.transition--in {
					left: 0;
					background: linear-gradient(to bottom right, #000 49%, rgba(255, 255, 255, 0.3) 50%);
				}
				&.transition--out {
					left: 100%;
					background: linear-gradient(to top right, rgba(255, 255, 255, 0.3) 49%, rgba(0, 0, 0, 0.5) 50%);

					&.at-end {
						// There is no space to use to the right.
						// Show that there is an out-transition in another way:
						left: calc(100% - 1em);
						border-left: 2px solid rgba(255, 255, 255, 0.5);
						background: linear-gradient(to top right, rgba(255, 255, 255, 0.5) 49%, #000 50%);
						width: 1em !important;
					}
				}
			}

			.body {
				z-index: 2;

				flex-grow: 1;
				flex-shrink: 1;
				min-width: 0;
				display: flex;
				.warning-icon {
					margin-right: 0.6rem;
					transform: translateY(2px);
					flex-shrink: 0;
				}

				.title,
				.duration {
					font-size: 1.4rem;
					text-shadow: 0 0 4px #00000080;
					white-space: nowrap;
				}

				.title {
					font-weight: 600;
					flex-shrink: 1;
					min-width: 0;
					overflow: hidden;
					text-overflow: ellipsis;
					margin-right: auto;
				}

				.duration {
					font-family: $mainFontCondensed;
					font-variant-numeric: tabular-nums;
					font-weight: 500;
					color: rgba(255, 255, 255, 0.7);
					flex-shrink: 0;
					margin-left: 1rem;
					overflow: hidden;
					text-overflow: ellipsis;
				}
			}

			.handle {
				z-index: 3;
				position: absolute;
				top: 0;
				height: 100%;
				width: $timelineObjHandleWidth;
				box-sizing: border-box;
				border-style: solid;
				border-width: 1px;
				border-color: white;
				opacity: 0.33;

				&--left {
					left: 0;
					border-right-width: 0;
					border-top-left-radius: $borderRadius;
					border-bottom-left-radius: $borderRadius;
					cursor: w-resize;
				}

				&--right {
					right: 0;
					border-left-width: 0;
					border-top-right-radius: $borderRadius;
					border-bottom-right-radius: $borderRadius;
					cursor: e-resize;
				}
			}

			@include useObjectTypeStyles();

			&.warning {
				background: $invalidLayerColor;

				&.overlapping {
					animation: timeline-obj-overlap-animation 1.5s steps(1, start) 0s infinite;
				}
			}
		}
	}
}
// Don't transition when moving:
.layers.moving {
	.layer {
		.layer__content {
			.timeline-object {
				transition: none;
			}
		}
	}
}

@keyframes timeline-obj-overlap-animation {
	50% {
		background: #c2424290;
	}
}
